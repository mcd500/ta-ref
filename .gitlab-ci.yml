variables:
    GITLAB_URL: http://192.168.100.100
    DOCKERHUB_USER: vc707
    RPI3_IP_ADDR: 192.168.100.61
    DOCKERHUB_REPO: vc707/test
    KEYSTONE_QEMU_IMAGE: vc707/test:ta_ref_keystone_qemu_devel
    KEYSTONE_HIFIVE_IMAGE: vc707/test:ta_ref_keystone_hifive_devel
    KEYSTONE_VC707_IMAGE: vc707/test:ta_ref_keystone_vc707_devel
    SGX_IMAGE: vc707/test:ta_ref_sgx_devel
    OPTEE_QEMU_IMAGE: vc707/test:ta_ref_optee_qemu_devel
    OPTEE_RPI3_IMAGE: vc707/test:ta_ref_optee_rpi3_devel
    CONTAINER_ROOT_DIR: /home/main/ta-ref
    WORKDIR: ${CONTAINER_ROOT_DIR}

before_script:
    - docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASSWD}
    - git submodule update --init --recursive
    - docker run -v ${VOLUME} -w ${WORKDIR} --rm ${IMAGE} /bin/bash -c "${SCRIPT}"

after_script:
    - docker run -v ${VOLUME} -w ${WORKDIR} --rm ${IMAGE} /bin/bash -c "source ${ENVS} && make select clean"
    # TODO: we want to fail CI if false.
    - test $(find build/lib -mindepth 1 | wc -l) -eq 1
    - test $(find build/include -mindepth 1 | wc -l) -eq 1
    - docker run -v ${VOLUME} -w ${WORKDIR} --rm ${IMAGE} /bin/bash -c "source ${ENVS} && make select mrproper"

# see env/ directory
stages:
    - keystone
    - sgx_x64
    - sgx_x32
    - optee

keystone_qemu_mbedcrypt:
    variables:
        ENVS: env/keystone.sh
        IMAGE: ${KEYSTONE_QEMU_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build CRYPT_TYPE=MBEDCRYPT &&
          make test &&
          make run"
    stage: keystone
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'

keystone_qemu_profiler:
    variables:
        ENVS: env/keystone.sh
        IMAGE: ${KEYSTONE_QEMU_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build PROFILER=ON &&
          make test PROFILER=ON &&
          make run"
    stage: keystone
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'

keystone_qemu_wolfcrypt:
    variables:
        ENVS: env/keystone.sh
        IMAGE: ${KEYSTONE_QEMU_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build CRYPT_TYPE=WOLFCRYPT &&
          make test &&
          make run"
    stage: keystone
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'

keystone_hifive:
    variables:
        ENVS: env/keystone.sh
        IMAGE: ${KEYSTONE_HIFIVE_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build &&
          make test MACHINE=HIFIVE &&
          make run MACHINE=HIFIVE"
    stage: keystone
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'

keystone_hifive_profiler:
    variables:
        ENVS: env/keystone.sh
        IMAGE: ${KEYSTONE_HIFIVE_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build PROFILER=ON &&
          make test MACHINE=HIFIVE PROFILER=ON &&
          make run MACHINE=HIFIVE"
    stage: keystone
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'

keystone_vc707:
    variables:
        ENVS: env/keystone.sh
        IMAGE: ${KEYSTONE_VC707_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build &&
          make test MACHINE=VC707 &&
          make run MACHINE=VC707"
    stage: keystone
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'

keystone_vc707_profiler:
    variables:
        ENVS: env/keystone.sh
        IMAGE: ${KEYSTONE_VC707_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build PROFILER=ON &&
          make test MACHINE=VC707 PROFILER=ON &&
          make run MACHINE=VC707"
    stage: keystone
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'

### SGX (x64) ###
sgx_x64_sim:
    variables:
        ENVS: env/sgx_x64.sh
        IMAGE: ${SGX_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build &&
          make test MACHINE=SIM &&
          make run"
    stage: sgx_x64
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'

sgx_x64_sim_profiler:
    variables:
        ENVS: env/sgx_x64.sh
        IMAGE: ${SGX_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build PROFILER=ON &&
          make test MACHINE=SIM PROFILER=ON &&
          make run PROFILER=ON"
    stage: sgx_x64
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'

sgx_x64_intel_nuc:
    variables:
        ENVS: env/sgx_x64.sh
        IMAGE: ${SGX_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build &&
          make test MACHINE=NUC &&
          make run MACHINE=NUC"
    stage: sgx_x64
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'

sgx_x64_intel_nuc_profiler:
    variables:
        ENVS: env/sgx_x64.sh
        IMAGE: ${SGX_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build PROFILER=ON &&
          make test MACHINE=NUC PROFILER=ON &&
          make run MACHINE=NUC"
    stage: sgx_x64
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'

### OPTEE ###
optee_qemu_v8:
    variables:
        ENVS: env/optee_qemu.sh
        IMAGE: ${OPTEE_QEMU_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build &&
          make test &&
          make run"
    stage: optee
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'

optee_qemu_v8_profiler:
    variables:
        ENVS: env/optee_qemu.sh
        IMAGE: ${OPTEE_QEMU_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build PROFILER=ON &&
          make test PROFILER=ON &&
          make run"
    stage: optee
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'

optee_rpi3:
    variables:
        ENVS: env/optee_rpi3.sh
        IMAGE: ${OPTEE_RPI3_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build &&
          make test &&
          make run"
    stage: optee
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'

optee_rpi3_profiler:
    variables:
        ENVS: env/optee_rpi3.sh
        IMAGE: ${OPTEE_RPI3_IMAGE}
        VOLUME: ${CI_PROJECT_DIR}:${CONTAINER_ROOT_DIR}
        # TODO: this is too nasy, so we use `image:` tag
        SCRIPT: "source ${ENVS} &&
          make select &&
          make build PROFILER=ON &&
          make test PROFILER=ON &&
          make run"
    stage: optee
    only:
        - master
    tags:
        - shell
    script:
        - 'echo dummy'
