variables:
    DOCKER_IMAGE: trasioteam/ta_ref_devel
    DOCKER_IMAGE_OPTEE: trasioteam/optee

.test_template: &test_definition
    variables:
        ENVS: env/dummy.sh
    tags:
        - ref-ta
    only:
        - master
    stage: test
    before_script:
        - git submodule update --init --recursive
        - source ${ENVS}
    after_script:
        - source ${ENVS}
        # cleanup
        - make mrproper

keystone_qemu_default:
    <<: *test_definition
    image: ${DOCKER_IMAGE}:keystone_qemu
    variables:
        ENVS: env/keystone.sh
    script:
        - make build test run

keystone_trvsim_default:
    variables:
        # OVPSIM_LICENCE and MAC_ADDR are defined in CI/CD settings -> Variables.
        ENVS: env/dummy.sh
        SDIMAGE_URL: http://192.168.100.100:2000/keystone_trvsim_hifive_sdimage.tar.xz
        IMAGE_DIR: ${CI_PROJECT_DIR}/image
        CONTAINER_IMAGE_DIR: /tmp/image
        CONTAINER_OVPSIM_PATH: /home/trv/Imperas.20200628/OVPsim.lic
        PORT: 10022
        CONTAINER_NAME: trvsim_${CI_COMMIT_SHORT_SHA}
        WAIT_TIME: 60
        TA_REF_WORKDIR: /home/main/ref-ta
    tags:
        - shell
    only:
        - master
    stage: test
    before_script:
        # launch TRV simulator at background
        - mkdir -p ${IMAGE_DIR}
        - wget ${SDIMAGE_URL} -o /dev/null
        - tar xf keystone_trvsim_hifive_sdimage.tar.xz -C ${IMAGE_DIR}
        - docker run --rm -d -v ${IMAGE_DIR}:${CONTAINER_IMAGE_DIR} -v ${OVPSIM_LICENCE}:${CONTAINER_OVPSIM_PATH} --name ${CONTAINER_NAME} -p ${PORT}:${PORT} --hostname trvsim --mac-address ${MAC_ADDR} trasioteam/riscv_toolchain:trvsim
        - rm -f ~/.ssh/known_hosts
        - sleep ${WAIT_TIME}
    script:
        # update this repo
        - git submodule update --init --recursive
        - docker run --rm -v ${CI_PROJECT_DIR}:${TA_REF_WORKDIR} -w ${TA_REF_WORKDIR} ${DOCKER_IMAGE}:keystone_qemu /bin/bash -c "source env/keystone.sh && MACHINE=TRVSIM make build test run; make mrproper"
    after_script:
        # cleanup
        - docker exec ${CONTAINER_NAME} cat "uart0.log"
        - docker exec ${CONTAINER_NAME} cat "uart1.log"
        - docker stop ${CONTAINER_NAME}

sgx_sim_default:
    <<: *test_definition
    image: ${DOCKER_IMAGE}:sgx
    variables:
        ENVS: env/sgx_x64.sh
    script:
        - make build test run

sgx_nuc_default:
    <<: *test_definition
    image: ${DOCKER_IMAGE}:sgx
    variables:
        ENVS: env/sgx_x64.sh
    script:
        - MACHINE=NUC make build test run

optee_qemu_default:
    <<: *test_definition
    image: ${DOCKER_IMAGE}:optee_qemu_v8
    variables:
        ENVS: env/optee_qemu.sh
    script:
        - make build test run

optee_rpi3_default:
    <<: *test_definition
    image: ${DOCKER_IMAGE}:optee_rpi3
    variables:
        ENVS: env/optee_rpi3.sh
    script:
        - make build test run

optee_qemu_teep:
    <<: *test_definition
    image: ${DOCKER_IMAGE_OPTEE}:qemu_optee_teep
    variables:
        ENVS: env/optee_qemu_teep.sh
    script:
        - echo "Hi"
        - echo ${OPTEE_DIR}
        - ls -la /
        - pwd
        - ls -la
        - cd ~; pwd; ls -la; cd /builds/rinkai/ta-ref
        - make build test run
